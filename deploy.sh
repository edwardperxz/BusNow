#!/bin/bash

# üöÄ BusNow Deployment Scripts
# Scripts para facilitar el deployment de BusNow en EAS

echo "üöå BusNow - EAS Deployment Helper"
echo "================================="

# Configurar app.json autom√°ticamente
echo -e "${YELLOW}üîß Configurando app.json con variables de .env...${NC}"
npm run configure

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Error en configuraci√≥n. Verifica tu archivo .env${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Configuraci√≥n completada${NC}"
echo ""

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para mostrar estado de builds
check_builds() {
    echo -e "${BLUE}üìä Estado actual de builds:${NC}"
    eas build:list
}

# Funci√≥n para build de desarrollo
build_dev() {
    echo -e "${YELLOW}üî® Iniciando build de desarrollo...${NC}"
    eas build --platform all --profile development
}

# Funci√≥n para build de preview
build_preview() {
    echo -e "${BLUE}üì± Iniciando build de preview...${NC}"
    echo "Selecciona plataforma:"
    echo "1) Android"
    echo "2) iOS"
    echo "3) Ambas"
    read -p "Opci√≥n (1-3): " platform_choice
    
    case $platform_choice in
        1)
            eas build --platform android --profile preview
            ;;
        2)
            eas build --platform ios --profile preview
            ;;
        3)
            eas build --platform all --profile preview
            ;;
        *)
            echo -e "${RED}Opci√≥n inv√°lida${NC}"
            ;;
    esac
}

# Funci√≥n para build de producci√≥n
build_prod() {
    echo -e "${GREEN}üöÄ Iniciando build de producci√≥n...${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  ¬øEst√°s seguro? Este build ir√° a las tiendas.${NC}"
    read -p "Confirmar (y/N): " confirm
    
    if [[ $confirm =~ ^[Yy]$ ]]; then
        echo "Selecciona plataforma:"
        echo "1) Android"
        echo "2) iOS" 
        echo "3) Ambas"
        read -p "Opci√≥n (1-3): " platform_choice
        
        case $platform_choice in
            1)
                eas build --platform android --profile production
                ;;
            2)
                eas build --platform ios --profile production
                ;;
            3)
                eas build --platform all --profile production
                ;;
            *)
                echo -e "${RED}Opci√≥n inv√°lida${NC}"
                ;;
        esac
    else
        echo "Build cancelado."
    fi
}

# Funci√≥n para actualizaciones OTA
ota_update() {
    echo -e "${BLUE}üì§ Enviando actualizaci√≥n OTA...${NC}"
    echo "Selecciona canal:"
    echo "1) Preview"
    echo "2) Production"
    read -p "Opci√≥n (1-2): " channel_choice
    
    read -p "Mensaje de la actualizaci√≥n: " message
    
    case $channel_choice in
        1)
            eas update --branch preview --message "$message"
            ;;
        2)
            echo -e "${YELLOW}‚ö†Ô∏è  Actualizando producci√≥n. ¬øConfirmar?${NC}"
            read -p "Confirmar (y/N): " confirm
            if [[ $confirm =~ ^[Yy]$ ]]; then
                eas update --branch production --message "$message"
            else
                echo "Actualizaci√≥n cancelada."
            fi
            ;;
        *)
            echo -e "${RED}Opci√≥n inv√°lida${NC}"
            ;;
    esac
}

# Funci√≥n para enviar a tiendas
submit_stores() {
    echo -e "${GREEN}üè™ Enviar a tiendas...${NC}"
    echo "Selecciona tienda:"
    echo "1) Google Play Store (Android)"
    echo "2) Apple App Store (iOS)"
    echo "3) Ambas"
    read -p "Opci√≥n (1-3): " store_choice
    
    case $store_choice in
        1)
            eas submit --platform android --profile production
            ;;
        2)
            eas submit --platform ios --profile production
            ;;
        3)
            eas submit --platform all --profile production
            ;;
        *)
            echo -e "${RED}Opci√≥n inv√°lida${NC}"
            ;;
    esac
}

# Men√∫ principal
show_menu() {
    echo ""
    echo "¬øQu√© deseas hacer?"
    echo "1) Ver estado de builds"
    echo "2) Build de desarrollo"
    echo "3) Build de preview"
    echo "4) Build de producci√≥n"
    echo "5) Actualizaci√≥n OTA"
    echo "6) Enviar a tiendas"
    echo "7) Salir"
    echo ""
}

# Loop principal
while true; do
    show_menu
    read -p "Selecciona una opci√≥n (1-7): " choice
    
    case $choice in
        1)
            check_builds
            ;;
        2)
            build_dev
            ;;
        3)
            build_preview
            ;;
        4)
            build_prod
            ;;
        5)
            ota_update
            ;;
        6)
            submit_stores
            ;;
        7)
            echo -e "${GREEN}¬°Hasta luego! üöå${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}Opci√≥n inv√°lida. Por favor selecciona 1-7.${NC}"
            ;;
    esac
    
    echo ""
    read -p "Presiona Enter para continuar..."
done
